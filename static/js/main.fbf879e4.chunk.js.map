{"version":3,"sources":["common/devises.ts","components/WeatherSearch/WeatherSearch.styles.ts","store/reducers/actions.ts","components/WeatherSearch/WeatherSearch.tsx","components/WeatherToday/WeatherToday.styles.ts","store/reducers/weatherSlice.ts","common/utilits.ts","components/WeatherToday/WeatherToday.tsx","components/Weather/Weather.styles.ts","components/WeatherForecast/WeatherForecst.styles.ts","components/WeatherForecast/WeatherForecast.tsx","components/WeatherFail/WeatherFail.styles.ts","components/WeatherFail/WeatherFail.tsx","common/constantas.ts","components/WeatherLoader/WeatherLoader.tsx","components/Weather/Weather.tsx","App.tsx","store/reducers/index.ts","store/saga/weatherSaga.ts","store/saga/index.ts","store/store.ts","index.tsx"],"names":["size","device","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","SerachWrapper","styled","form","SearchInput","input","SearchButton","button","REQUEST_WEATHER","fetchDataWeather","createAction","city","payload","WeatherSearch","useState","setCity","dispatch","useDispatch","onSubmit","event","preventDefault","onChange","value","target","type","placeholder","WrapperToday","div","weatherSlice","createSlice","name","initialState","weatherCurr","weatherForec","isFail","isLoad","reducers","fetchData","state","action","maikeFail","makeLoading","actions","selectCurr","weather","data","selectForec","selectIsFail","selectIsLoad","formatValue","temp","Math","floor","WeatherToday","todayWeather","useSelector","main","forecTitle","description","forecIcon","icon","feelsLike","feels_like","wind","speed","humidity","className","src","alt","WeatherWrapper","WrapperForecast","WeatherForecast","weekWeather","daily","slice","map","item","time","dt","Date","toLocaleString","weekday","imgName","eve","nanoid","Paragraph","p","WeatherFail","WeatherLoader","color","height","width","timeout","Weather","App","rootReducer","combineReducers","weatherReducer","weatherWorker","weatherWatcher","put","call","axios","get","coord","lat","lon","weatherData","takeEveryUp","takeEvery","rootSaga","all","sagaMiddleware","createSagaMiddleware","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","concat","run","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fbf879e4.chunk.js","sourcesContent":["const size = {\n  mobileS: '320px',\n  mobileM: '375px',\n  mobileL: '426px',\n  tablet: '768px',\n  laptop: '1024px',\n  laptopL: '1440px',\n  desktop: '2560px',\n};\n\nexport const device = {\n  mobileS: `(max-width: ${size.mobileS})`,\n  mobileM: `(max-width: ${size.mobileM})`,\n  mobileL: `(max-width: ${size.mobileL})`,\n  tablet: `(max-width: ${size.tablet})`,\n  laptop: `(max-width: ${size.laptop})`,\n  laptopL: `(max-width: ${size.laptopL})`,\n  desktop: `(max-width: ${size.desktop})`,\n  desktopL: `(max-width: ${size.desktop})`,\n};\n","import styled from 'styled-components';\nimport { device } from '../../common/devises';\n\nexport const SerachWrapper = styled.form`\n    display: flex;\n    margin: 3rem 0 1rem;\n\n    @media ${device.mobileS} { \n        width: 90%;\n\n    }\n    @media ${device.mobileL} { \n        width: 90%;\n        \n    }\n`;\n\nexport const SearchInput = styled.input`\n    width: 27rem;\n    height: 3.5rem;\n    padding-left: 1rem;\n    background-color: #e6e6e6;\n    border: .1rem solid #bf9d6a;\n    border-radius: .5rem 0 0 .5rem;\n    font-family: inherit;\n    font-size: 1.5rem;\n`;\n\nexport const SearchButton = styled.button`\n    width: 8rem;\n    line-height: 3.5rem;\n    background-color: #bf9d6a;\n    border-radius: 0 .5rem .5rem 0;\n    border: .1rem solid transparent;\n    font-family: inherit;\n    font-size: 1.5rem;\n    font-weight: bold;\n`;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const REQUEST_WEATHER = 'REQUEST_WEATHER';\nexport const fetchDataWeather = createAction(REQUEST_WEATHER, (city: string) => ({\n  payload: city,\n}));\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { SearchInput, SearchButton, SerachWrapper } from './WeatherSearch.styles';\nimport { fetchDataWeather } from '../../store/reducers/actions';\n\nexport const WeatherSearch = (): JSX.Element => {\n  const [city, setCity] = useState('');\n  const dispatch = useDispatch();\n\n  const onChangeInput = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    const { value } = event.target;\n    setCity(value);\n  };\n  const onSearch = (event: React.FormEvent<HTMLFormElement>): void => {\n    event.preventDefault();\n    if (city) {\n      dispatch(fetchDataWeather(city));\n      setCity('');\n    }\n  };\n  return (\n    <SerachWrapper onSubmit={onSearch}>\n      <SearchInput onChange={onChangeInput} type=\"text\" placeholder=\"Enter City\" value={city} />\n      <SearchButton>Search</SearchButton>\n    </SerachWrapper>\n  );\n};\n","import styled from 'styled-components';\nimport { device } from '../../common/devises';\n\nexport const WrapperToday = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-contect: center;\n    margin-bottom: 2rem;\n    color: #FFFFFF;\n\n    .weather-today {\n        display: flex;\n        margin-bottom: 2rem;\n        @media ${device.mobileL} { \n            justify-content: space-between;\n        }\n    }\n    .city {\n        margin: 0.1rem;\n        font-size: 6rem;\n        font-weight: 550;\n\n        @media ${device.mobileS} { \n            font-size: 5rem;\n        }\n    }\n    .temp-block {\n        display: flex;\n        margin-right: 2rem;\n    }\n    .today-temp {\n        font-size: 17rem;\n\n        @media ${device.mobileL} { \n            font-size: 10rem;\n        }\n    }\n    .temp-sign {\n        font-size: 10rem;\n\n        @media ${device.mobileL} { \n            font-size: 5rem;\n        }\n    }\n    .forecast-today {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n    }\n    .forecast-icon {\n        display: flex;\n        justify-content:center;\n        overflow: hidden;\n    }\n    .forecast-icon img {\n        box-sizing: inherit;\n    }\n    .forecast-title {\n        @media ${device.mobileS} { \n            font-size: 2rem;\n        }\n    }\n    .forecast-title:first-letter {\n        text-transform:capitalize;\n    }\n\n    .weather-details {\n        display: flex;\n        @media ${device.mobileL} { \n            flex-direction: column;\n            align-items: center;\n        }\n    }\n\n    .weather-details p {\n        margin-right: 2rem;\n        @media ${device.mobileL} {\n            margin-right: 0;\n            margin-bottom: 1rem;\n        }\n    }\n    \n    @media ${device.mobileL} { \n        width: 90%;\n    }\n    \n`;\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit';\nimport { InitialStateT } from '../../types/types';\n\nconst initialState: InitialStateT = {\n  weatherCurr: null,\n  weatherForec: null,\n  isFail: false,\n  isLoad: false,\n};\n\nexport const weatherSlice = createSlice({\n  name: 'weather',\n  initialState,\n  reducers: {\n    fetchData(state, action) {\n      state.weatherCurr = action.payload.weatherCurr;\n      state.weatherForec = action.payload.weatherForec;\n      state.isFail = false;\n      state.isLoad = false;\n    },\n    maikeFail(state) {\n      state.isFail = true;\n      state.isLoad = false;\n    },\n    makeLoading(state) {\n      state.isLoad = true;\n    },\n  },\n});\n\nexport const { fetchData, maikeFail, makeLoading } = weatherSlice.actions;\nexport const selectCurr = ({ weather }: { weather: InitialStateT }) => weather.weatherCurr?.data;\nexport const selectForec = ({ weather }: { weather: InitialStateT }) => weather.weatherForec?.data;\nexport const selectIsFail = ({ weather }: { weather: InitialStateT }) => weather.isFail;\nexport const selectIsLoad = ({ weather }: { weather: InitialStateT }) => weather.isLoad;\nexport default weatherSlice.reducer;\n","export function getDayOfWeek(time: number): string {\n  return new Date(time * 1000).toLocaleString('en-us', {\n    weekday: 'long',\n  });\n}\n\nexport const formatValue = (temp: number | undefined): number | string => {\n  if (typeof temp === 'undefined') {\n    return 'N/a';\n  }\n  return Math.floor(temp);\n};\n\nexport function getImgUrl(imgName: string): string {\n  return `http://openweathermap.org/img/wn/${imgName}@2x.png`;\n}\n","import { useSelector } from 'react-redux';\nimport { WrapperToday } from './WeatherToday.styles';\nimport { selectCurr } from '../../store/reducers/weatherSlice';\nimport { formatValue } from '../../common/utilits';\n\nexport const WeatherToday = (): JSX.Element => {\n  const todayWeather = useSelector(selectCurr);\n  const city = todayWeather?.name;\n  const temp = todayWeather?.main.temp;\n  const forecTitle = todayWeather?.weather[0].description;\n  const forecIcon = todayWeather?.weather[0].icon;\n  const feelsLike = todayWeather?.main.feels_like;\n  const wind = todayWeather?.wind.speed;\n  const humidity = todayWeather?.main.humidity;\n\n  return (\n    <WrapperToday>\n      { city && <h2 className=\"city\">{city}</h2> }\n      { temp\n      && (\n        <>\n          <div className=\"weather-today\">\n            <div className=\"temp-block\">\n              <span className=\"today-temp\">{formatValue(temp)}</span>\n              <span className=\"temp-sign\">℃</span>\n            </div>\n            <div className=\"forecast-today\">\n              <div className=\"forecast-icon\">\n                <img src={`http://openweathermap.org/img/wn/${forecIcon}@2x.png`} alt=\"forecast icon\" />\n              </div>\n              <p className=\"forecast-title\">{forecTitle}</p>\n            </div>\n          </div>\n          <div className=\"weather-details\">\n            <p>{`Feels like: ${formatValue(feelsLike)} °C`}</p>\n            <p>{`Wind: ${formatValue(wind)} m/s`}</p>\n            <p>{`Humidity: ${formatValue(humidity)}%`}</p>\n          </div>\n        </>\n      )}\n\n    </WrapperToday>\n  );\n};\n","import styled from 'styled-components';\nimport { device } from '../../common/devises';\n\nexport const WeatherWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin: auto;\n\n    @media ${device.mobileS} { \n        width: 100%;\n      }\n    @media ${device.mobileL} { \n        width: 100%;\n      }\n`;\n","import styled from 'styled-components';\nimport { device } from '../../common/devises';\n\nexport const WrapperForecast = styled.div`\n    display: flex;\n\n    .forecast-week-item {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        width: 9rem;\n        margin: 0 15px 1vh;\n        padding: 15px;\n        background-color: #2b457b;\n        border: 1px solid hsla(0, 0%, 100%, .5);\n        border-radius: 0.5rem;\n    }\n    .forecast-week-icon img{\n        width: 7.7rem;\n        height: 7.7rem;\n    }\n    @media ${device.mobileS} { \n        flex-direction: column;\n    }\n\n    @media ${device.tablet} { \n        flex-wrap: wrap;\n        justify-content: center;\n    }\n`;\n","import { useSelector } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport { WrapperForecast } from './WeatherForecst.styles';\nimport { selectForec } from '../../store/reducers/weatherSlice';\nimport { getDayOfWeek, formatValue, getImgUrl } from '../../common/utilits';\n\nexport const WeatherForecast = (): JSX.Element => {\n  const weekWeather = useSelector(selectForec)?.daily.slice(1, 6);\n\n  return (\n    <WrapperForecast>\n      { weekWeather?.map((item) => (\n        <div key={nanoid()} className=\"forecast-week-item\">\n          <p>{getDayOfWeek(item.dt)}</p>\n          <div className=\"forecast-week-icon\">\n            <img src={getImgUrl(item.weather[0].icon)} alt=\"forecast item icon\" />\n          </div>\n          <div>\n            <span>{formatValue(item.temp.eve)}</span>\n            <span>℃</span>\n          </div>\n        </div>\n      ))}\n    </WrapperForecast>\n  );\n};\n","import styled from 'styled-components';\nimport { device } from '../../common/devises';\n\nexport const Paragraph = styled.p`\n    @media ${device.mobileL} { \n        font-size: 1.5rem;\n    }\n    @media ${device.mobileS} { \n        font-size: 1rem;\n    }\n`;\n","import { Paragraph } from './WeatherFail.styles';\nimport { WARNING_TEXT } from '../../common/constantas';\n\nexport const WeatherFail = (): JSX.Element => <Paragraph>{WARNING_TEXT}</Paragraph>;\n","export const WARNING_TEXT = 'Please, could you enter a valid name of city.';\n","import Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nexport const WeatherLoader = (): JSX.Element => (\n  <Loader\n    type=\"Oval\"\n    color=\"#00BFFF\"\n    height={80}\n    width={80}\n    timeout={3000}\n  />\n);\n","/* eslint-disable no-nested-ternary */\nimport { useSelector } from 'react-redux';\nimport { WeatherSearch } from '../WeatherSearch';\nimport { WeatherToday } from '../WeatherToday/WeatherToday';\nimport { WeatherWrapper } from './Weather.styles';\nimport { WeatherForecast } from '../WeatherForecast/WeatherForecast';\nimport { WeatherFail } from '../WeatherFail';\nimport { WeatherLoader } from '../WeatherLoader';\nimport { selectIsFail, selectIsLoad } from '../../store/reducers/weatherSlice';\n\nexport const Weather = () => {\n  const isFail = useSelector(selectIsFail);\n  const isLoad = useSelector(selectIsLoad);\n\n  return (\n    <WeatherWrapper>\n      <WeatherSearch />\n      { isFail\n        ? <WeatherFail />\n        : isLoad\n          ? <WeatherLoader />\n          : (\n            <>\n              <WeatherToday />\n              <WeatherForecast />\n            </>\n          )}\n    </WeatherWrapper>\n  );\n};\n","import React from 'react';\nimport { Weather } from './components/Weather';\n\nfunction App() {\n  return <Weather />;\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport weatherReducer from './weatherSlice';\n\nexport const rootReducer = combineReducers({\n  weather: weatherReducer,\n});\n","import { call, put, takeEvery } from 'redux-saga/effects';\nimport axios from 'axios';\nimport {\n  fetchData, maikeFail, makeLoading,\n} from '../reducers/weatherSlice';\nimport { REQUEST_WEATHER } from '../reducers/actions';\n\nfunction* weatherWorker({ payload }: { payload: string }): any {\n  try {\n    yield put(makeLoading());\n    const weatherCurr = yield call(\n      axios.get,\n      `http://api.openweathermap.org/data/2.5/weather?q=${payload}&appid=5fce9fcfaffc69d976811967daa4e476&units=metric&lang=en`,\n    );\n    const { lat, lon } = yield weatherCurr.data.coord;\n    const weatherForec = yield call(\n      axios.get,\n      `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&appid=5fce9fcfaffc69d976811967daa4e476&units=metric&exclude=current&lang=en`,\n    );\n    const weatherData = yield { weatherCurr, weatherForec };\n    yield put(fetchData(weatherData));\n  } catch (e) {\n    yield put(maikeFail());\n  }\n}\n\nconst takeEveryUp: any = takeEvery;\n\nexport function* weatherWatcher() {\n  yield takeEveryUp(REQUEST_WEATHER, weatherWorker);\n}\n","import { all } from 'redux-saga/effects';\nimport { weatherWatcher } from './weatherSaga';\n\nexport function* rootSaga() {\n  yield all([weatherWatcher()]);\n}\n","import { configureStore } from '@reduxjs/toolkit';\nimport createSagaMiddleware from '@redux-saga/core';\nimport { rootReducer } from './reducers';\nimport { rootSaga } from './saga';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware({ serializableCheck: false })\n    .concat(sagaMiddleware),\n});\n\nsagaMiddleware.run(rootSaga);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport { store } from './store/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}